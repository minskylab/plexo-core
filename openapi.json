{
  "openapi": "3.0.0",
  "info": {
    "title": "Hello World",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "Member",
      "description": "Operations about members"
    },
    {
      "name": "Project",
      "description": "Operations about projects"
    },
    {
      "name": "Task",
      "description": "Operations about tasks"
    },
    {
      "name": "Team",
      "description": "Operations about teams"
    }
  ],
  "paths": {
    "/tasks": {
      "post": {
        "tags": [
          "Task"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns when the user is successfully created.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "operationId": "create_task"
      },
      "get": {
        "tags": [
          "Task"
        ],
        "responses": {
          "200": {
            "description": "Returns when the user is successfully created.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        },
        "operationId": "list_tasks"
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns when the user is successfully created.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "operationId": "get_task"
      },
      "put": {
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns when the user is successfully created.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "operationId": "update_task"
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns when the user is successfully created.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "operationId": "delete_task"
      }
    },
    "/projects": {
      "post": {
        "tags": [
          "Project"
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns when the user is successfully created.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        },
        "operationId": "create_project"
      },
      "get": {
        "tags": [
          "Project"
        ],
        "responses": {
          "200": {
            "description": "Returns when the user is successfully created.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        },
        "operationId": "list_projects"
      }
    }
  },
  "components": {
    "schemas": {
      "Project": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "owner_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "lead_id": {
            "type": "string",
            "format": "uuid"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "due_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Task": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "title",
          "owner_id",
          "status",
          "priority",
          "count"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "priority": {
            "$ref": "#/components/schemas/TaskPriority"
          },
          "due_date": {
            "type": "string",
            "format": "date-time"
          },
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "lead_id": {
            "type": "string",
            "format": "uuid"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "parent_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TaskPriority": {
        "type": "string",
        "enum": [
          "None",
          "Low",
          "Medium",
          "High",
          "Urgent"
        ]
      },
      "TaskStatus": {
        "type": "string",
        "enum": [
          "None",
          "Backlog",
          "ToDo",
          "InProgress",
          "Done",
          "Canceled"
        ]
      }
    }
  }
}